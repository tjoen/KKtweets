{
  "name": "ministore",
  "description": "ministore is a mini JSON file based key-value store",
  "version": "0.0.5",
  "homepage": "https://github.com/stagas/ministore",
  "author": {
    "name": "George Stagas",
    "email": "gstagas@gmail.com",
    "url": "http://stagas.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stagas/ministore.git"
  },
  "main": "./ministore",
  "engines": {
    "node": ">=0.4.7"
  },
  "readme": "ministore\r\n=========\r\n\r\nInstallation:\r\n-------------\r\n    npm install ministore\r\n\r\nUsage:\r\n------\r\n```javascript\r\n\r\n// create our db\r\nvar Store = require('ministore')('../path/to/db/dir')\r\n\r\n// create some collections\r\nvar users = Store('users')\r\nvar sessions = Store('sessions', { polling: 3000 }) // will save every 3 secs\r\n\r\n// sync way (no callback)\r\nusers.set('john', 'doe')\r\nusers.get('john') // 'doe'\r\n\r\n// async way\r\nusers.set('mary', 'loo', function(err) {\r\n  users.get('mary', function(err, data) {\r\n    console.log(data) // 'loo'\r\n  })\r\n})\r\n\r\n```\r\n\r\nOptions:\r\n--------\r\n\r\n### Store('somestore', options)\r\n\r\n### polling: true (OR) false (OR) ms [default: false]\r\nSave at intervals\r\n\r\n### watch: true (OR) false [default: false]\r\nWatch store for changes (if there are many open)\r\n\r\nAPI methods:\r\n------------\r\n\r\nAll API methods accept a callback as the last argument, making the process async\r\n\r\n### get(key)\r\n### set(key, val)\r\n### remove(key)\r\n### push(key, val) / unshift(key, val)\r\n### shift(key) / pop(key)\r\n### has(key)\r\n### all()\r\n### clear()\r\n### list()\r\n### length()\r\n### forEach(fn)\r\n### save()\r\n### eval(key)\r\n### evalshift(key)\r\n### evalpop(key)\r\n\r\nExample: \r\n\r\n```javascript\r\n\r\nvar math = require('ministore')('mdb')('math')\r\nmath.set('add', function (a, b) { return a + b })\r\nmath.eval('add')(4, 5) // 9\r\n\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "ministore@0.0.5",
  "_from": "ministore@0.0.x"
}
